pipeline {
    agent {
        docker {
          image 'shansurana/econsunsumptioncalculator:v1'
          args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // mount Docker socket to access the host's Docker daemon
        }
      }
    stages {
        stage('Checkout') {
            steps {
                // Checkout the code from the repository. Not needed if checkout is done at the beginning of the pipeline
                git 'https://github.com/shansurana-dev/EConsumption-Calculator.git'
            }
        }

        stage('Build') {
            steps {
                // Clean previous builds, build the project and create jar file
                sh 'mvn clean package'
            }
        }

        stage('Unit Tests') {
            steps {
                // Run unit tests
                sh 'mvn test'
            }
        }
        stage('Static Code Analysis') {
              environment {
              //ip address of the EC2 agent runner
                SONAR_URL = "http://<ip address>:9000"
              }
              steps {
              // Generate token in SonarQube and add it in the jenkins credentials.
                withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
                  sh 'mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
                }
              }
        }
        stage('Build and Push Docker Image') {
              environment {
                DOCKER_IMAGE = "shansurana/econsunsumptioncalculator:${BUILD_NUMBER}"
                REGISTRY_CREDENTIALS = credentials('docker-cred')
              }
              steps {
                script {
                    sh 'docker build -t ${DOCKER_IMAGE} .'
                    def dockerImage = docker.image("${DOCKER_IMAGE}")
                    docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
                        dockerImage.push()
                    }
                }
              }
            }
            stage('Update Deployment File') {
            // For now, I have placed the deployment.yml file in the root directory of the same repository. Ideally, it should be in a separate repository.
                environment {
                    GIT_REPO_NAME = "EConsumption-Calculator"
                    GIT_USER_NAME = "shansurana-dev"
                }
                steps {
                    //Generate the token in github (settings->Developer settings->Personal access token) and add it in the jenkins credentials.
                    //This token should have write access to the repository.
                    withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                        sh '''
                            git config user.email "shan.surana@gmail.com"
                            git config user.name "Shanthilal Surana"
                            BUILD_NUMBER=${BUILD_NUMBER}
                            sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" deployment.yml
                            git add deployment.yml
                            git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                            git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                        '''
                    }
                }
            }
          }
        }
    post {
        always {
            // Archive the built JAR file
            archiveArtifacts artifacts: 'target/*.jar', allowEmptyArchive: true

            // Publish test results
            junit 'target/surefire-reports/*.xml'
        }
    }
}
